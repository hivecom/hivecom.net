-- Add games array to events table
ALTER TABLE "public"."events"
  ADD COLUMN "games" bigint[];

-- Add website field to profiles table
ALTER TABLE "public"."profiles"
  ADD COLUMN "website" text;

-- Add foreign key index for games array elements
CREATE INDEX events_games_idx ON public.events USING gin(games);

-- Create projects table for showcasing community open source projects and initiatives
CREATE TABLE "public"."projects"(
  "id" bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  "created_at" timestamp with time zone NOT NULL DEFAULT NOW(),
  "created_by" uuid NOT NULL DEFAULT auth.uid(),
  "modified_at" timestamp with time zone,
  "modified_by" uuid,
  "title" text NOT NULL,
  "description" text,
  "markdown" text NOT NULL,
  "link" text,
  "tags" text[],
  "owner" uuid
);

-- Add table comment
COMMENT ON TABLE "public"."projects" IS 'Community open source projects and initiatives showcase';

-- Add column comments
COMMENT ON COLUMN "public"."projects"."title" IS 'The project title/name';

COMMENT ON COLUMN "public"."projects"."description" IS 'Short description of the project';

COMMENT ON COLUMN "public"."projects"."markdown" IS 'Detailed project description in markdown format';

COMMENT ON COLUMN "public"."projects"."link" IS 'Project website, repository, or main URL';

COMMENT ON COLUMN "public"."projects"."tags" IS 'Array of tags/categories for the project';

COMMENT ON COLUMN "public"."projects"."owner" IS 'User who owns/maintains this project';

-- Enable RLS on projects table
ALTER TABLE "public"."projects" ENABLE ROW LEVEL SECURITY;

-- Create primary key
CREATE UNIQUE INDEX projects_pkey ON public.projects USING btree(id);

ALTER TABLE "public"."projects"
  ADD CONSTRAINT "projects_pkey" PRIMARY KEY USING INDEX "projects_pkey";

-- Add foreign key constraint for owner
ALTER TABLE "public"."projects"
  ADD CONSTRAINT "projects_owner_fkey" FOREIGN KEY (OWNER) REFERENCES "public"."profiles"(id);

-- Create indexes for better performance
CREATE INDEX projects_created_at_idx ON public.projects USING btree(created_at DESC);

CREATE INDEX projects_tags_idx ON public.projects USING gin(tags);

CREATE INDEX projects_owner_idx ON public.projects USING btree(OWNER);

-- Grant projects permissions to admin role
INSERT INTO "public"."role_permissions"(role, permission)
  VALUES ('admin', 'projects.create'),
('admin', 'projects.delete'),
('admin', 'projects.read'),
('admin', 'projects.update');

-- Grant read permissions to moderator role
INSERT INTO "public"."role_permissions"(role, permission)
  VALUES ('moderator', 'projects.read');

-- Create automatic audit field trigger for projects table
CREATE TRIGGER update_projects_audit_fields
  BEFORE UPDATE ON public.projects
  FOR EACH ROW
  EXECUTE FUNCTION public.update_audit_fields();

-- RLS Policies for projects table
-- Read policy: Allow everyone to read projects
CREATE POLICY "projects_select_policy" ON "public"."projects" AS PERMISSIVE
  FOR SELECT TO authenticated, anon
    USING (TRUE);

-- Insert policy: Allow users with projects.create permission
CREATE POLICY "projects_insert_policy" ON "public"."projects" AS PERMISSIVE
  FOR INSERT TO authenticated
    WITH CHECK (authorize('projects.create'));

-- Update policy: Allow users with projects.update permission
CREATE POLICY "projects_update_policy" ON "public"."projects" AS PERMISSIVE
  FOR UPDATE TO authenticated
    USING (authorize('projects.update'))
    WITH CHECK (authorize('projects.update')
      AND audit_fields_unchanged(created_at, created_by));

-- Delete policy: Allow users with projects.delete permission
CREATE POLICY "projects_delete_policy" ON "public"."projects" AS PERMISSIVE
  FOR DELETE TO authenticated
    USING (authorize('projects.delete'));

