CREATE TABLE "public"."gameserver_containers" (
    "name" text not null,
    "created_at" timestamp with time zone not null default now(),
    "running" boolean not null,
    "healthy" boolean not null,
    "reported_at" timestamp without time zone not null,
    "server" bigint
);

COMMENT ON TABLE "public"."gameserver_containers" IS 'Game server containers and their respective states';

ALTER TABLE "public"."gameserver_containers" enable row level security;

CREATE TABLE "public"."servers" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "address" text not null,
    "active" boolean not null
);

COMMENT ON TABLE "public"."servers" IS 'Server network information';

ALTER TABLE "public"."servers" enable row level security;

ALTER TABLE "public"."gameservers" add column "container" text;

CREATE UNIQUE INDEX gameserver_containers_pkey ON public.gameserver_containers USING btree (name);

CREATE UNIQUE INDEX servers_pkey ON public.servers USING btree (id);

ALTER TABLE "public"."gameserver_containers" add constraint "gameserver_containers_pkey" PRIMARY KEY using index "gameserver_containers_pkey";

ALTER TABLE "public"."servers" add constraint "servers_pkey" PRIMARY KEY using index "servers_pkey";

ALTER TABLE "public"."gameserver_containers" add constraint "gameserver_containers_server_fkey" FOREIGN KEY (server) REFERENCES servers(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

ALTER TABLE "public"."gameserver_containers" validate constraint "gameserver_containers_server_fkey";

ALTER TABLE "public"."gameservers" add constraint "gameservers_container_fkey" FOREIGN KEY (container) REFERENCES gameserver_containers(name) ON UPDATE CASCADE ON DELETE CASCADE not valid;

ALTER TABLE "public"."gameservers" validate constraint "gameservers_container_fkey";

GRANT DELETE ON TABLE "public"."gameserver_containers" TO "anon";

GRANT INSERT ON TABLE "public"."gameserver_containers" TO "anon";

GRANT REFERENCES ON TABLE "public"."gameserver_containers" TO "anon";

GRANT SELECT ON TABLE "public"."gameserver_containers" TO "anon";

GRANT TRIGGER ON TABLE "public"."gameserver_containers" TO "anon";

GRANT TRUNCATE ON TABLE "public"."gameserver_containers" TO "anon";

GRANT UPDATE ON TABLE "public"."gameserver_containers" TO "anon";

GRANT DELETE ON TABLE "public"."gameserver_containers" TO "authenticated";

GRANT INSERT ON TABLE "public"."gameserver_containers" TO "authenticated";

GRANT REFERENCES ON TABLE "public"."gameserver_containers" TO "authenticated";

GRANT SELECT ON TABLE "public"."gameserver_containers" TO "authenticated";

GRANT TRIGGER ON TABLE "public"."gameserver_containers" TO "authenticated";

GRANT TRUNCATE ON TABLE "public"."gameserver_containers" TO "authenticated";

GRANT UPDATE ON TABLE "public"."gameserver_containers" TO "authenticated";

GRANT DELETE ON TABLE "public"."gameserver_containers" TO "service_role";

GRANT INSERT ON TABLE "public"."gameserver_containers" TO "service_role";

GRANT REFERENCES ON TABLE "public"."gameserver_containers" TO "service_role";

GRANT SELECT ON TABLE "public"."gameserver_containers" TO "service_role";

GRANT TRIGGER ON TABLE "public"."gameserver_containers" TO "service_role";

GRANT TRUNCATE ON TABLE "public"."gameserver_containers" TO "service_role";

GRANT UPDATE ON TABLE "public"."gameserver_containers" TO "service_role";

GRANT DELETE ON TABLE "public"."servers" TO "anon";

GRANT INSERT ON TABLE "public"."servers" TO "anon";

GRANT REFERENCES ON TABLE "public"."servers" TO "anon";

GRANT SELECT ON TABLE "public"."servers" TO "anon";

GRANT TRIGGER ON TABLE "public"."servers" TO "anon";

GRANT TRUNCATE ON TABLE "public"."servers" TO "anon";

GRANT UPDATE ON TABLE "public"."servers" TO "anon";

GRANT DELETE ON TABLE "public"."servers" TO "authenticated";

GRANT INSERT ON TABLE "public"."servers" TO "authenticated";

GRANT REFERENCES ON TABLE "public"."servers" TO "authenticated";

GRANT SELECT ON TABLE "public"."servers" TO "authenticated";

GRANT TRIGGER ON TABLE "public"."servers" TO "authenticated";

GRANT TRUNCATE ON TABLE "public"."servers" TO "authenticated";

GRANT UPDATE ON TABLE "public"."servers" TO "authenticated";

GRANT DELETE ON TABLE "public"."servers" TO "service_role";

GRANT INSERT ON TABLE "public"."servers" TO "service_role";

GRANT REFERENCES ON TABLE "public"."servers" TO "service_role";

GRANT SELECT ON TABLE "public"."servers" TO "service_role";

GRANT TRIGGER ON TABLE "public"."servers" TO "service_role";

GRANT TRUNCATE ON TABLE "public"."servers" TO "service_role";

GRANT UPDATE ON TABLE "public"."servers" TO "service_role";

CREATE POLICY "Everyone can SELECT gameserver containers"
ON "public"."gameserver_containers"
AS permissive
FOR SELECT
TO authenticated, anon
USING (true);

CREATE POLICY "Allow authorized roles to CRUD servers"
ON "public"."servers"
AS permissive
FOR all
TO authenticated
USING (( SELECT authorize('games.crud'::app_permission) AS authorize));
